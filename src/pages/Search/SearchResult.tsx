import React, { useEffect, useState } from 'react';
import { useNavigate, useSearchParams } from 'react-router-dom';
import { searchDrugsSmart, DrugData, getAllDrugs } from '../../api/drugData';
import './Search.css';

const DrugCard = ({ drug, onClick }: { drug: DrugData, onClick: () => void }) => {
    const getDrugIcon = (form: string) => {
        if (form.includes('‡πÄ‡∏°‡πá‡∏î')) return 'üíä';
        if (form.includes('‡∏ô‡πâ‡∏≥')) return 'üß™';
        if (form.includes('‡∏Ñ‡∏£‡∏µ‡∏°') || form.includes('‡∏Ç‡∏µ‡πâ‡∏ú‡∏∂‡πâ‡∏á')) return 'üß¥';
        if (form.includes('‡∏â‡∏µ‡∏î')) return 'üíâ';
        if (form.includes('‡πÅ‡∏Ñ‡∏õ‡∏ã‡∏π‡∏•')) return 'üíä';
        if (form.includes('‡πÅ‡∏Å‡∏£‡∏ô‡∏π‡∏•')) return 'üß™';
        return 'üíä';
    };
    return (
        <div className="drug-card" onClick={onClick}>
            <div className="drug-card-image">{getDrugIcon(drug.‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏¢‡∏≤)}</div>
            <div className="drug-card-info">
                <h3 className="drug-card-title">{drug.‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏≤}</h3>
                <p className="drug-card-subtitle">{drug.‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏°‡∏±‡∏ç}</p>
                <div className="drug-card-uses">
                    {drug['‡∏¢‡∏≤‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö'].split('\n')[0].replace('* ', '')}
                </div>
            </div>
        </div>
    );
};

const SearchResult = () => {
    const navigate = useNavigate();
    const [searchParams] = useSearchParams();
    const query = searchParams.get('query') || '';
    const [results, setResults] = useState<DrugData[]>([]);
    const [isLoading, setIsLoading] = useState(true);

    useEffect(() => {
        const fetchResults = async () => {
            setIsLoading(true);
            const allDrugs = await getAllDrugs();
            const normalized = query.trim().toLowerCase().replace(/\s+/g, '');
            // exact match ‡∏Å‡πà‡∏≠‡∏ô
            const exact = allDrugs.filter(drug =>
                drug.‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏≤.trim().toLowerCase().replace(/\s+/g, '') === normalized ||
                drug.‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏°‡∏±‡∏ç.trim().toLowerCase().replace(/\s+/g, '') === normalized
            );
            if (exact.length > 0) {
                setResults(exact);
                setIsLoading(false);
                return;
            }
            // fallback: ‡πÉ‡∏ä‡πâ searchDrugsSmart (multi-keyword)
            const filtered = query.trim() ? await searchDrugsSmart(query, allDrugs) : [];
            setResults(filtered);
            setIsLoading(false);
        };
        fetchResults();
    }, [query]);

    const handleBack = () => navigate(-1);

    return (
        <div className="search-page">
            <header className="page-header" style={{ display: 'flex', alignItems: 'center', gap: 8 }}>
                <button onClick={handleBack} style={{ fontSize: 24, background: 'none', border: 'none', cursor: 'pointer', marginRight: 8 }}>‚Üê</button>
                <h1 className="header-title" style={{ flex: 1 }}>‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤</h1>
            </header>
            <div className="results-section">
                <div className="results-header">
                    <h2 className="section-title">‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤</h2>
                    <span className="results-count">‡∏û‡∏ö {results.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</span>
                </div>
                {isLoading ? (
                    <div className="loading-state">
                        <div className="loading-spinner" />
                        <p>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤...</p>
                    </div>
                ) : results.length > 0 ? (
                    <div className="drugs-grid">
                        {results.map((drug, index) => {
                            const cardKey = drug.‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏≤ + '_' + drug.‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏¢‡∏≤ + '_' + index;
                            return (
                                <DrugCard
                                    key={cardKey}
                                    drug={drug}
                                    onClick={() => navigate(`/drug-details?name=${encodeURIComponent(drug.‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏≤)}`)}
                                />
                            );
                        })}
                    </div>
                ) : (
                    <div className="no-results">
                        <p>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤</p>
                    </div>
                )}
            </div>
        </div>
    );
};

export default SearchResult; 