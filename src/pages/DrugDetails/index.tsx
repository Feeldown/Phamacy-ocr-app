import React, { useState, useEffect } from 'react';
import { useLocation, useNavigate, useParams } from 'react-router-dom';
import { getDrugByName, DrugData, getSimilarDrugs } from '../../api/drugData';
import './DrugDetails.css';

const InfoCard = ({ title, icon, content, type = '' }: { title: string, icon: string, content: string | string[], type?: string }) => {
    if (!content || (Array.isArray(content) && content.length === 0)) return null;

    const createMarkup = (text: string) => {
        return { __html: text.replace(/\n/g, '<br />') };
    };

    const renderContent = () => {
        if (Array.isArray(content)) {
            return (
                <ul className="info-list">
                    {content.map((item, index) => (
                        <li key={index} dangerouslySetInnerHTML={createMarkup(item)} />
                    ))}
                </ul>
            );
        }
        return <div className="info-content" dangerouslySetInnerHTML={createMarkup(content)} />;
    };

    return (
        <div className={`info-card ${type}`}>
            <h3 className="info-title">
                <span className="info-icon">{icon}</span>
                {title}
            </h3>
            {renderContent()}
        </div>
    );
};

const DrugCard = ({ drug, onClick }: { drug: DrugData, onClick: () => void }) => {
    const drugIcon = drug.‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏¢‡∏≤.includes('‡πÄ‡∏°‡πá‡∏î') ? 'üíä' : drug.‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏¢‡∏≤.includes('‡∏ô‡πâ‡∏≥') ? 'üß™' : 'ü©π';
    
    return (
        <div className="drug-card" onClick={onClick}>
            <div className="drug-card-image">{drugIcon}</div>
            <div className="drug-card-info">
                <h4>{drug.‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏°‡∏±‡∏ç}</h4>
                {/* <p>{drug.‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏°‡∏±‡∏ç}</p> */}
                <span className="drug-card-form">{drug.‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏¢‡∏≤}</span>
            </div>
        </div>
    );
};

const DrugDetailsPage = () => {
    const location = useLocation();
    const params = new URLSearchParams(location.search);
    const queryDrugName = params.get('name') || '';
    const { name: pathDrugName } = useParams();
    const drugName = queryDrugName || pathDrugName || '';
    const navigate = useNavigate();
    const [drug, setDrug] = useState<DrugData | null>(null);
    const [loading, setLoading] = useState(true);
    const [similarDrugs, setSimilarDrugs] = useState<DrugData[]>([]);
    const [recentlyViewed, setRecentlyViewed] = useState<DrugData[]>([]);

    useEffect(() => {
        const fetchDrug = async () => {
            if (drugName) {
                try {
                    // normalize: decodeURIComponent, trim, toLowerCase
                    const decodedName = decodeURIComponent(drugName).trim();
                    const foundDrug = await getDrugByName(decodedName);
                    if (foundDrug) {
                        setDrug(foundDrug);
                        // Get similar drugs
                        const similar = await getSimilarDrugs(foundDrug);
                        setSimilarDrugs(similar);
                        // Update recently viewed
                        const recent = JSON.parse(localStorage.getItem('recentlyViewed') || '[]');
                        const updatedRecent = [
                            foundDrug,
                            ...recent.filter((d: DrugData) => d.‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏≤ !== foundDrug.‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏≤)
                        ].slice(0, 5);
                        localStorage.setItem('recentlyViewed', JSON.stringify(updatedRecent));
                        setRecentlyViewed(updatedRecent);
                    } else {
                        setDrug(null);
                    }
                } catch (error) {
                    console.error("Error fetching drug details:", error);
                    setDrug(null);
                } finally {
                    setLoading(false);
                }
            } else {
                setDrug(null);
                setLoading(false);
            }
        };
        fetchDrug();
    }, [drugName]);

    if (loading) {
        return <div className="drug-details-page"><p>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</p></div>;
    }

    if (!drug) {
        return (
            <div className="drug-details-page">
                 <header className="header">
                    <button onClick={() => navigate(-1)} className="back-btn">‚Üê</button>
                    <h1 className="drug-title">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡∏≤</h1>
                </header>
                <p style={{textAlign: 'center', padding: '20px'}}>‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤</p>
            </div>
        );
    }

    const drugIcon = drug.‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏¢‡∏≤.includes('‡πÄ‡∏°‡πá‡∏î') ? 'üíä' : drug.‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏¢‡∏≤.includes('‡∏ô‡πâ‡∏≥') ? 'üß™' : 'ü©π';

    return (
        <div className="drug-details-page page-container">
            <header className="header">
                <button onClick={() => navigate(-1)} className="back-btn">‚Üê</button>
                <h1 className="drug-title">{drug.‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏≤}</h1>
                {/* <p className="drug-subtitle">{drug.‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏°‡∏±‡∏ç}</p> */}
            </header>

            <section className="drug-image-section">
                <div className="drug-image-placeholder">{drugIcon}</div>
            </section>

            <div className="drug-info">
                <section className="info-section">
                    <h2 className="section-title">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô</h2>
                    <InfoCard
                        title="‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ"
                        icon="üíä"
                        content={[`‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏°‡∏±‡∏ç: ${drug.‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏°‡∏±‡∏ç}`, `‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏≤: ${drug.‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏≤}`, `‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏¢‡∏≤: ${drug.‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏¢‡∏≤}`]}
                    />
                </section>

                <section className="info-section">
                    <h2 className="section-title">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏¢‡∏≤</h2>
                     <InfoCard
                        title="‡∏¢‡∏≤‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö"
                        icon="üéØ"
                        content={drug['‡∏¢‡∏≤‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö']}
                        type="success"
                    />
                    <InfoCard
                        title="‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏¢‡∏≤"
                        icon="üíâ"
                        content={drug['‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏¢‡∏≤']}
                    />
                </section>

                 <section className="info-section">
                    <h2 className="section-title">‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏£‡∏£‡∏∞‡∏ß‡∏±‡∏á‡πÅ‡∏•‡∏∞‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÑ‡∏°‡πà‡∏û‡∏∂‡∏á‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå</h2>
                     <InfoCard
                        title="‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÉ‡∏´‡πâ‡πÅ‡∏û‡∏ó‡∏¢‡πå‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏†‡∏™‡∏±‡∏ä‡∏Å‡∏£‡∏ó‡∏£‡∏≤‡∏ö"
                        icon="‚ö†Ô∏è"
                        content={drug['‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÉ‡∏´‡πâ‡πÅ‡∏û‡∏ó‡∏¢‡πå‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏†‡∏™‡∏±‡∏ä‡∏Å‡∏£‡∏ó‡∏£‡∏≤‡∏ö']}
                        type="warning"
                    />
                     <InfoCard
                        title="‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÑ‡∏°‡πà‡∏û‡∏∂‡∏á‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ"
                        icon="‚ÑπÔ∏è"
                        content={drug['‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÑ‡∏°‡πà‡∏û‡∏∂‡∏á‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ']}
                    />
                     <InfoCard
                        title="‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÅ‡∏û‡∏ó‡∏¢‡πå‡∏ó‡∏±‡∏ô‡∏ó‡∏µ"
                        icon="‚ùó"
                        content={drug['‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÑ‡∏°‡πà‡∏û‡∏∂‡∏á‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÅ‡∏û‡∏ó‡∏¢‡πå‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏†‡∏™‡∏±‡∏ä‡∏Å‡∏£‡∏ó‡∏±‡∏ô‡∏ó‡∏µ']}
                        type="warning"
                    />
                </section>

                 <section className="info-section">
                    <h2 className="section-title">‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏¢‡∏≤</h2>
                    <InfoCard
                        title="‡∏ó‡∏≥‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£‡∏´‡∏≤‡∏Å‡∏•‡∏∑‡∏°‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏ó‡∏≤‡∏ô‡∏¢‡∏≤"
                        icon="‚è∞"
                        content={drug['‡∏ó‡∏≥‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£‡∏´‡∏≤‡∏Å‡∏•‡∏∑‡∏°‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏ó‡∏≤‡∏ô‡∏¢‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ‡∏¢‡∏≤']}
                    />
                     <InfoCard
                        title="‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏¢‡∏≤"
                        icon="üè•"
                        content={drug['‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏¢‡∏≤']}
                    />
                </section>
            </div>

            {similarDrugs.length > 0 && (
                <section className="similar-drugs-section">
                    <h2 className="section-title">‡∏¢‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢‡∏Å‡∏±‡∏ô</h2>
                    <div className="similar-drugs-grid">
                        {similarDrugs.map(similarDrug => (
                            <DrugCard
                                key={similarDrug.‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏≤}
                                drug={similarDrug}
                                onClick={() => navigate(`/drugs/${encodeURIComponent(similarDrug.‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏≤)}`)}
                            />
                        ))}
                    </div>
                </section>
            )}

            {recentlyViewed.length > 0 && (
                <section className="recently-viewed-section">
                    <h2 className="section-title">‡∏¢‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏á‡∏î‡∏π‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î</h2>
                    <div className="recently-viewed-grid">
                        {recentlyViewed.map(recentDrug => (
                            <DrugCard
                                key={recentDrug.‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏≤}
                                drug={recentDrug}
                                onClick={() => navigate(`/drugs/${encodeURIComponent(recentDrug.‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏≤)}`)}
                            />
                        ))}
                    </div>
                </section>
            )}
        </div>
    );
};

export default DrugDetailsPage; 